@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Razor;
@using TestLab;
@using ItemBuilder;
@using System;
@using System.Text.Json;
@using System.Text.Json.Nodes;

@inherits Panel

@namespace ItemBuilder.UI

<style>
    Inventory
    {
        opacity: 0;

        width: 100%;
        height: 100%;
        flex-direction: row;
        gap: 8px;
        flex-wrap: wrap;
        pointer-events: all;

        .item 
        {
            max-width: 128px;
           
            >.square
            {
                display: flex;
                
                width: 100%;
                height: auto;
                
                aspect-ratio: 1;
                
                justify-content: center;
                align-items: center;
                flex-direction: column;
                
                border: .5em solid white;
                
                background-color: rgba(0.5,0.5,0.5,0.5);
            }

            i {
                font-family: 'Material Icons Outlined';
                color: white;
                font-size: 50%;
              
            }

            .title {
                width: 100%;
                color: white;
                font-size: 16px;
                font-weight: bold;
                font-family: 'PT Root UI';
                margin-top: 16px;
                justify-content: center;
                text-align: center;
            }

            transition: background-color 0.2s;

            &:hover {
                background-color: rgba(0.5,0.5,0.5, 0.8);
            }
        }

        &.visible {
            opacity: 1;
            background-color: rgba(0.5,0.5,0.5, 0.8);
        }
    }
</style>

<root class="@VisibleClass">
    @foreach(var item in PlayerInventory.Items)
    {
        <div class="item">
            <div class="square">
                <div class="title">@GetItemName(item)</div>
            </div>
        </div>
    }
</root>

@code
{
    private static Inventory Instance { get; set; } = null; 


    public bool Visible = false;
    public string VisibleClass => Visible ? "visible" : "";

    public PlayerInventory PlayerInventory => Player.Local?.GameObject.Components.Get<PlayerInventory>();

    public Inventory()
    {
        Instance = this;
    }

    public string GetItemName(string json) {
        return JsonSerializer.Deserialize<JsonObject>(json)["Name"].ToString();
    }

    public static void Show()
    {
        Instance.Visible = !Instance.Visible;

        Instance.StateHasChanged();
    }

    protected override int BuildHash() => 33 + System.HashCode.Combine(PlayerInventory.Items.Count);
}
